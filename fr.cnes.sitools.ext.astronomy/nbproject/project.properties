annotation.processing.enabled=true
annotation.processing.enabled.in.editor=false
annotation.processing.processors.list=
annotation.processing.run.all.processors=true
annotation.processing.source.output=${build.generated.sources.dir}/ap-source-output
application.title=Astronomy-Extension-v2
application.vendor=Jean-Christophe Malapert
auxiliary.org-nbheaven-sqe-tools-checkstyle-codedefects-projects-freeform.checkstyle_2e_configuration_2e_file=/home/malapert/Documents/SITools2/sun_checks.xml
build.classes.dir=${build.dir}/classes
build.classes.excludes=**/*.java,**/*.form
# This directory is removed when the project is cleaned:
build.dir=build
build.generated.dir=${build.dir}/generated
build.generated.sources.dir=${build.dir}/generated-sources
# Only compile against the classpath explicitly listed here:
build.sysclasspath=ignore
build.test.classes.dir=${build.dir}/test/classes
build.test.results.dir=${build.dir}/test/results
# Uncomment to specify the preferred debugger connection transport:
#debug.transport=dt_socket
debug.classpath=\
    ${run.classpath}
debug.test.classpath=\
    ${run.test.classpath}
# This directory is removed when the project is cleaned:
dist.dir=dist
dist.jar=${dist.dir}/fr.cnes.sitools.ext.astronomy.jar
dist.javadoc.dir=${dist.dir}/javadoc
endorsed.classpath=
excludes=
file.reference.ehcache-2.7.0.jar=lib/ehcache-2.7.0.jar
file.reference.fits.jar=lib/fits.jar
file.reference.fr.cnes.sitools.ext.astronomy-src=src
file.reference.fr.cnes.sitools.ext.astronomy-test=test
file.reference.jai_codec.jar=lib/jai_codec.jar
file.reference.jai_core.jar=lib/jai_core.jar
file.reference.jai_imageio.jar=lib/jai_imageio.jar
file.reference.mlibwrapper_jai.jar=lib/mlibwrapper_jai.jar
file.reference.plantuml.jar=lib/plantuml.jar
includes=**
jar.archive.disabled=${jnlp.enabled}
jar.compress=false
jar.index=${jnlp.enabled}
javac.classpath=\
    ${file.reference.ehcache-2.7.0.jar}:\
    ${file.reference.fits.jar}:\
    ${file.reference.jai_codec.jar}:\
    ${file.reference.jai_core.jar}:\
    ${file.reference.jai_imageio.jar}:\
    ${file.reference.mlibwrapper_jai.jar}:\
    ${file.reference.plantuml.jar}:\
    ${libs.SITools2.classpath}
# Space-separated list of extra javac options
javac.compilerargs=
javac.deprecation=false
javac.processorpath=\
    ${javac.classpath}
javac.source=1.6
javac.target=1.6
javac.test.classpath=\
    ${javac.classpath}:\
    ${build.classes.dir}:\
    ${libs.junit_4.classpath}
javac.test.processorpath=\
    ${javac.test.classpath}
javadoc.additionalparam=
javadoc.author=false
javadoc.encoding=${source.encoding}
javadoc.noindex=false
javadoc.nonavbar=false
javadoc.notree=false
javadoc.private=false
javadoc.splitindex=true
javadoc.use=true
javadoc.version=false
javadoc.windowtitle=
jnlp.applet.class=fr.cnes.sitools.astro.graph.Graph
jnlp.applet.height=300
jnlp.applet.width=300
jnlp.codebase.type=no.codebase
jnlp.descriptor=application
jnlp.enabled=false
jnlp.mixed.code=default
jnlp.offline-allowed=false
jnlp.signed=false
jnlp.signing=
jnlp.signing.alias=
jnlp.signing.keystore=
main.class=run.Invoker
manifest.file=manifest.mf
meta.inf.dir=${src.dir}/META-INF
mkdist.disabled=false
platform.active=JDK_1.6
project.license=sitools2
run.classpath=\
    ${javac.classpath}:\
    ${build.classes.dir}
# Space-separated list of JVM arguments used when running the project.
# You may also define separate properties like run-sys-prop.name=value instead of -Dname=value.
# To set system properties for unit tests define test-sys-prop.name=value:
run.jvmargs=-Dcom.tc.productkey.path=/home/malapert/Documents/Terracota/terracotta-license.key
run.test.classpath=\
    ${javac.test.classpath}:\
    ${build.test.classes.dir}
source.encoding=UTF-8
src.dir=${file.reference.fr.cnes.sitools.ext.astronomy-src}
test.src.dir=test/src
